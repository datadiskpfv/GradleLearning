apply plugin: 'idea'

logger.info "build.gradle ---> This is executed during the build phase - timestamp @ ${project.gradle.timestamp()}"

logger.info ">>> build.grade version: $gradle.gradleVersion"
logger.info ">>> build.grade HomeDir: $gradle.gradleHomeDir"
logger.info ">>> build.grade UserHomeDir: $gradle.gradleUserHomeDir"

getLogger().info ">>> build.gradle build file: $project.buildFile"
getLogger().info ">>> build.gradle relative build file path: ${project.relativePath(project.buildFile)}"

// shortcut (SC) for above
logger.info ">>> build.gradle build file(SC): $buildFile"
logger.info ">>> build.gradle relative build file path(SC): ${relativePath(buildFile)}"

logger.info "has property gradleVersion: ${project.gradle.hasProperty('gradleVersion')}"
logger.info "has property projectDir: ${project.gradle.hasProperty('projectDir')}"

// Own Project properties
logger.info "has property gradleDDPropertiesProp: ${project.hasProperty('gradleDDPropertiesProp')}"
logger.info "property gradleDDPropertiesProp: ${gradleDDPropertiesProp}"

// Extra Properties Extension
project.ext.sayHello = "Hello!!"
logger.info "ext: ${sayHello}"

logger.info "has property timestamp: ${project.gradle.hasProperty('timestamp')}"

// TASKS
//defaultTasks 'hello', 'hi'

task hi                             // configuration phase - create

project.hi.doLast {                 // configuration phase - configure
    logger.info "hi"
}

task hello {                        // all in one create and configure task
    // properties of the task
    description = "Log the name of the task"
    group = "Welcome"

    doFirst {
        logger.info "My name is: $name and this is doFirst 1st action"
    }

    doLast {
        logger.info "My name is: $name and this is doLast 1st action"
    }
}


// doLast is added to the end of the Action list
hello.doLast {
    logger.info "My name is: $name and this is doLast 2nd action"
}

// doFirst is added to the front of the Action list, this will run first
hello.doFirst {
    logger.info "My name is: $name and this is doFirst 2nd action"
}

logger.info hello.description
logger.info hello.group

//TASK DEPENDENCIES
defaultTasks 'doFinished'
task doStartProcess {
    doLast{
        logger.info "$name - Now starting the process - OK!"
    }
}

task doStep2 {
    doLast {
        logger.info "$name - Performed OK!"
    }
}

task doSomethingInTheMiddle {
    doLast {
        logger.info "$name - Performed something in the middle - OK!"
    }
}

task doFinished (dependsOn: 'doSomethingInTheMiddle') {
    doLast {
        logger.info "$name - Done OK!"
    }
}

logger.info ">>> ${tasks.findAll { task -> task.name.startsWith('doStep2')}}"

if(Math.random() < 0.5) {
    doSomethingInTheMiddle.dependsOn doStartProcess, tasks.findAll { task -> task.name.startsWith('doStep2') }
}

// No need to use $project.gradle we can use $gradle as shortcut
logger.info ">>> $gradle.taskGraph"
gradle.taskGraph.whenReady {
    logger.info ">>> List of all tasks: $gradle.taskGraph.allTasks"
}

gradle.taskGraph.beforeTask { task ->
    logger.info "+++ Before task $task.name"
}

gradle.taskGraph.afterTask { task ->
    logger.info "+++ After task $task.name"
}